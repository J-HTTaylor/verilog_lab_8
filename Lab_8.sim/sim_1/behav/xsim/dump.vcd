$date
   Thu Mar 13 14:17:17 2025
$end

$version
  2024.2.0
$end

$timescale
  1ps
$end

$scope module test $end
$var wire 16 ! led [15:0] $end
$var reg 16 " sw [15:0] $end
$var reg 1 # btnl $end
$var reg 1 $ btnu $end
$var reg 1 % btnd $end
$var reg 1 & btnr $end
$var reg 1 ' btnc $end
$var reg 5 ( i [4:0] $end
$var wire 2 ) mult_sel [1:0] $end
$var wire 2 * demult_sel [1:0] $end
$var wire 4 + current_mult [3:0] $end
$var wire 4 , current_demult [3:0] $end
$scope module uut $end
$var wire 16 - sw [15:0] $end
$var wire 1 . btnC $end
$var wire 1 / btnD $end
$var wire 1 0 btnR $end
$var wire 1 1 btnU $end
$var wire 1 2 btnL $end
$var wire 16 ! led [15:0] $end
$var wire 4 3 result [3:0] $end
$var wire 2 4 mux_concat [1:0] $end
$var wire 2 5 demux_concat [1:0] $end
$scope module mux_inst $end
$var wire 2 4 sel [1:0] $end
$var wire 4 6 CEO [3:0] $end
$var wire 4 7 you [7:4] $end
$var wire 4 8 Fred [11:8] $end
$var wire 4 9 Jill [15:12] $end
$var wire 1 . enable $end
$var wire 4 3 result [3:0] $end
$upscope $end
$scope module demux_inst $end
$var wire 4 3 user [3:0] $end
$var wire 1 . enable $end
$var wire 2 5 de_sel [1:0] $end
$var reg 4 : lib [3:0] $end
$var reg 4 ; fire_dep [3:0] $end
$var reg 4 < school [3:0] $end
$var reg 4 = rib [3:0] $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end

#0
$dumpvars
bx !
b110101001011001 "
0#
0$
0%
0&
0'
bx (
b0 )
b0 *
b1001 +
bx ,
b110101001011001 -
0.
0/
00
01
02
b0 3
b0 4
b0 5
b1001 6
b101 7
b1010 8
b110 9
bx :
bx ;
bx <
bx =
$end

#10000
b1001 !
1'
b0 (
b1001 ,
1.
b1001 3
b1001 :
b0 ;
b0 <
b0 =

#20000
b1 (

#30000
b101 !
1#
b10 (
b1 )
b101 +
b101 ,
12
b101 3
b1 4
b101 :

#40000
b1010 !
0#
1$
b11 (
b10 )
b1010 +
b1010 ,
11
02
b1010 3
b10 4
b1010 :

#50000
b110 !
1#
b100 (
b11 )
b110 +
b110 ,
12
b110 3
b11 4
b110 :

#60000
b10010000 !
0#
0$
1%
b101 (
b0 )
b1 *
b1001 +
b1001 ,
1/
01
02
b1001 3
b0 4
b1 5
b0 :
b1001 ;

#70000
b1010000 !
1#
b110 (
b1 )
b101 +
b101 ,
12
b101 3
b1 4
b101 ;

#80000
b10100000 !
0#
1$
b111 (
b10 )
b1010 +
b1010 ,
11
02
b1010 3
b10 4
b1010 ;

#90000
b1100000 !
1#
b1000 (
b11 )
b110 +
b110 ,
12
b110 3
b11 4
b110 ;

#100000
b100100000000 !
0#
0$
0%
1&
b1001 (
b0 )
b10 *
b1001 +
b1001 ,
0/
10
01
02
b1001 3
b0 4
b10 5
b0 ;
b1001 <

#110000
b10100000000 !
1#
b1010 (
b1 )
b101 +
b101 ,
12
b101 3
b1 4
b101 <

#120000
b101000000000 !
0#
1$
b1011 (
b10 )
b1010 +
b1010 ,
11
02
b1010 3
b10 4
b1010 <

#130000
b11000000000 !
1#
b1100 (
b11 )
b110 +
b110 ,
12
b110 3
b11 4
b110 <

#140000
b1001000000000000 !
0#
0$
1%
b1101 (
b0 )
b11 *
b1001 +
b1001 ,
1/
01
02
b1001 3
b0 4
b11 5
b0 <
b1001 =

#150000
b101000000000000 !
1#
b1110 (
b1 )
b101 +
b101 ,
12
b101 3
b1 4
b101 =

#160000
b1010000000000000 !
0#
1$
b1111 (
b10 )
b1010 +
b1010 ,
11
02
b1010 3
b10 4
b1010 =

#170000
b110000000000000 !
1#
b10000 (
b11 )
b110 +
b110 ,
12
b110 3
b11 4
b110 =
